{"version":3,"file":"static/js/407.066e8743.chunk.js","mappings":"kMACA,EAA0B,sBAA1B,EAAuD,mBAAvD,EAAmF,qB,SCGtEA,EAAO,SAAHC,GAAsB,IAAhBC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KACjBC,GAAWC,EAAAA,EAAAA,MAGjB,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAASC,SAAEN,KACzBO,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAYI,QALhC,WAAH,OAASR,GAASS,EAAAA,EAAAA,IAAWX,GAAK,EAKuBO,SAAC,aAKhF,EChBaK,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAQ,EAI7CC,EAAiB,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,KAAM,ECHzD,EAAuB,uBCIVC,EAAW,WACpB,IAAMJ,GAAQK,EAAAA,EAAAA,IAAYH,GAE1B,OACIR,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAASC,SACnBO,EAAMM,KAAI,SAAArB,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAI,OAClBO,EAAAA,EAAAA,KAAA,MAAAD,UACIC,EAAAA,EAAAA,KAACV,EAAI,CAACE,GAAIA,EAAIC,KAAMA,KADfD,EAEJ,KAIrB,EChBA,EAAuB,yBAAvB,EAAwD,0BAAxD,EAA2F,2BCG9EqB,EAAa,WACtB,IAAMnB,GAAWC,EAAAA,EAAAA,MAcjB,OACIC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUgB,SAbV,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTzB,EAAOwB,EAAKE,SAAS1B,KAAK2B,MAChC,GAAa,KAAT3B,EAGA,OAFAC,GAAS2B,EAAAA,EAAAA,IAAQ5B,SACjBwB,EAAKK,QAGTC,MAAM,yCACV,EAGsDxB,SAAA,EAC9CC,EAAAA,EAAAA,KAAA,SAAOwB,KAAK,OAAO3B,UAAWC,KAC9BE,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAASJ,UAAWC,EAAWC,SAAC,eAKzD,ECnBe,SAAS0B,IACpB,IAAM/B,GAAWC,EAAAA,EAAAA,MACX+B,GAAYf,EAAAA,EAAAA,IAAYP,GAM9B,OAJAuB,EAAAA,EAAAA,YAAU,WACNjC,GAASkC,EAAAA,EAAAA,MACb,GAAG,CAAClC,KAGAE,EAAAA,EAAAA,MAAAiC,EAAAA,SAAA,CAAA9B,SAAA,EACIC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAM,CAAA/B,UACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBAEXC,EAAAA,EAAAA,KAACa,EAAU,KACXb,EAAAA,EAAAA,KAAA,OAAAD,SAAM2B,GAAa,4BACnB1B,EAAAA,EAAAA,KAACU,EAAQ,MAGrB,C","sources":["webpack://register/./src/components/Task/Task.module.css?22e8","components/Task/Task.jsx","redux/tasks/selectors.js","webpack://register/./src/components/TaskList/TaskList.module.css?079b","components/TaskList/TaskList.jsx","webpack://register/./src/components/TaskEditor/TaskEditor.module.css?47aa","components/TaskEditor/TaskEditor.jsx","pages/Tasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Task_wrapper__fgr8E\",\"text\":\"Task_text__En2V3\",\"button\":\"Task_button__LqwZw\"};","import { useDispatch } from 'react-redux';\r\nimport { deleteTask } from '../../redux/tasks/operation';\r\nimport css from './Task.module.css';\r\n\r\nexport const Task = ({ id, text }) => {\r\n    const dispatch = useDispatch();\r\n    const handleDelete = () => dispatch(deleteTask(id));\r\n\r\n    return (\r\n        <div className={css.wrapper}>\r\n            <p className={css.text}>{text}</p>\r\n            <button type=\"button\" className={css.button} onClick={handleDelete}>\r\n                Delete\r\n            </button>\r\n        </div>\r\n    );\r\n};","export const selectLoading = state => state.tasks.loading;\r\n\r\nexport const selectFilter = state => state.tasks.filter;\r\n\r\nexport const selectAllTasks = state => state.tasks.items;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"TaskList_list__PidX9\"};","import { useSelector } from 'react-redux';\r\nimport { Task } from '../Task/Task';\r\nimport { selectAllTasks } from '../../redux/tasks/selectors';\r\nimport css from './TaskList.module.css';\r\n\r\nexport const TaskList = () => {\r\n    const tasks = useSelector(selectAllTasks);\r\n\r\n    return (\r\n        <ul className={css.list}>\r\n            {tasks.map(({ id, text }) => (\r\n                <li key={id}>\r\n                    <Task id={id} text={text} />\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"TaskEditor_form__FYO88\",\"input\":\"TaskEditor_input__r-kI+\",\"button\":\"TaskEditor_button__806cD\"};","import { useDispatch } from 'react-redux';\r\nimport { addTask } from '../../redux/tasks/operation';\r\nimport css from './TaskEditor.module.css';\r\n\r\nexport const TaskEditor = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const form = e.currentTarget;\r\n        const text = form.elements.text.value;\r\n        if (text !== '') {\r\n            dispatch(addTask(text));\r\n            form.reset();\r\n            return;\r\n        }\r\n        alert('Task cannot be empty. Enter some text!');\r\n    };\r\n\r\n    return (\r\n        <form className={css.form} onSubmit={handleSubmit}>\r\n            <input name=\"text\" className={css.input} />\r\n            <button type=\"submit\" className={css.button}>\r\n                Add task\r\n            </button>\r\n        </form>\r\n    );\r\n};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { TaskList } from '../components/TaskList/TaskList';\r\nimport { TaskEditor } from '../components/TaskEditor/TaskEditor';\r\nimport { fetchTasks } from '../redux/tasks/operation';\r\nimport { selectLoading } from '../redux/tasks/selectors';\r\n\r\nexport default function Tasks() {\r\n    const dispatch = useDispatch();\r\n    const isLoading = useSelector(selectLoading);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchTasks());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Your tasks</title>\r\n            </Helmet>\r\n            <TaskEditor />\r\n            <div>{isLoading && 'Request in progress...'}</div>\r\n            <TaskList />\r\n        </>\r\n    );\r\n}"],"names":["Task","_ref","id","text","dispatch","useDispatch","_jsxs","className","css","children","_jsx","type","onClick","deleteTask","selectLoading","state","tasks","loading","selectAllTasks","items","TaskList","useSelector","map","TaskEditor","onSubmit","e","preventDefault","form","currentTarget","elements","value","addTask","reset","alert","name","Tasks","isLoading","useEffect","fetchTasks","_Fragment","Helmet"],"sourceRoot":""}